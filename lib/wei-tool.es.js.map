{"version":3,"file":"wei-tool.es.js","sources":["../package/main.ts"],"sourcesContent":["/**\n * 用 call 的方式获取类型\n * @param {*} val 要验证的实例\n * @returns\n * *   '[object Object]',\n * *   '[object Array]',\n * *   '[object Map]',\n * *   '[object Set]',\n * *   '[object Function]',\n * *   '[object AsyncFunction]',\n * *   '[object Promise]',\n * *   '[object Symbol]',\n * *   '[object String]',\n * *   '[object Number]',\n * *   '[object BigInt]',\n * *   '[object RegExp]',\n * *   '[object Date]',\n * *   '[object Math]',\n * *   '[object Null]',\n * *   '[object Undefined]'\n * *   其他\n */\nconst toTypeString = (val: any) => {\n    return Object.prototype.toString.call(val)\n}\n\n/**\n * 获取具体类型\n * @param {*} val 要验证的实例\n * @returns\n * *   'function',\n * *   'async',\n * *   'object',\n * *   'array',\n * *   'string',\n * *   'number',\n * *   'bigInt',\n * *   'regExp',\n * *   'date',\n * *   'map',\n * *   'set',\n * *   'promise',\n * *   'symbol',\n * *   'math',\n * *   'null',\n * *   'undefined'\n * *   其他\n */\nconst typeName = (val: any) => {\n    return Object.prototype.toString.call(val).replace(/^\\[object (\\S+)\\]$/, '$1').toLowerCase()\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst hasOwn = (val: any, key: any) => hasOwnProperty.call(val, key)\n\n/**\n *  验证普通函数\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isFunction = (val: any) => toTypeString(val) === '[object Function]'\n\n/**\n * 验证 async 的函数\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isAsync = (val: any) => toTypeString(val) === '[object asyncFunction]'\n\n/**\n * 验证 Object，不含 null\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isObject = (val: any) => val !== null && typeof val === 'object'\n\n/**\n *  验证数组\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isArray = Array.isArray\n\n/**\n * 验证字符串\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isString = (val: any) => typeof val === 'string'\n\n/**\n * 验证 number\n * @param {*} val 要验证的对象\n * @returns\n */\n\nconst isNumber = (val: any) => typeof val === 'number'\n\n/**\n * 验证 BigInt\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isBigInt = (val: any) => typeof val === 'bigint'\n\n/**\n * 验证 boolean\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isBoolean = (val: any) => typeof val === 'boolean'\n\n/**\n * 验证正则类型\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isRegExp = (val: any) => toTypeString(val) === '[object RegExp]'\n/**\n * 验证日期\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isDate = (val: any) => val instanceof Date\n\n/**\n * 验证 map\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isMap = (val: any) => toTypeString(val) === '[object Map]'\n/**\n * 验证 set\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isSet = (val: any) => toTypeString(val) === '[object Set]'\n/**\n *  验证 Promise\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isPromise = (val: any) => toTypeString(val) === '[object Promise]'\n/**\n * 验证 Symbol\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isSymbol = (val: any) => typeof val === 'symbol'\n\n/**\n * null 或者 undefined 返回 true\n * @param {*} val 要验证的对象\n * @returns\n */\nconst isNullOrUndefined = (val: any) => {\n    if (val === null) return true\n    return typeof val === 'undefined';\n}\n\nexport {\n    toTypeString, // Object.prototype.toString.call(val)\n    typeName, // 获取可以识别的名称\n    hasOwnProperty,\n    hasOwn,\n    isFunction, // 验证普通函数\n    isAsync, // 验证 async 的函数\n    isObject, // 验证 Object\n    isArray, // 验证数组\n    isString, // 验证字符串\n    isNumber, // 验证 number\n    isBigInt, // 验证 BigInt\n    isBoolean, // 验证 布尔\n    isRegExp, // 验证正则类型\n    isDate, // 验证日期\n    isMap, // 验证 map\n    isSet, // 验证 set\n    isPromise, // 验证 Promise\n    isSymbol, // 验证 Symbol\n    isNullOrUndefined // null 或者 undefined 返回 true\n}\n"],"names":[],"mappings":"AAsBM,MAAA,eAAe,CAAC,QAAa;AAC/B,SAAO,OAAO,UAAU,SAAS,KAAK,GAAG;AAC7C;AAwBM,MAAA,WAAW,CAAC,QAAa;AACpB,SAAA,OAAO,UAAU,SAAS,KAAK,GAAG,EAAE,QAAQ,sBAAsB,IAAI,EAAE,YAAY;AAC/F;AAEM,MAAA,iBAAiB,OAAO,UAAU;AACxC,MAAM,SAAS,CAAC,KAAU,QAAa,eAAe,KAAK,KAAK,GAAG;AAOnE,MAAM,aAAa,CAAC,QAAa,aAAa,GAAG,MAAM;AAOvD,MAAM,UAAU,CAAC,QAAa,aAAa,GAAG,MAAM;AAOpD,MAAM,WAAW,CAAC,QAAa,QAAQ,QAAQ,OAAO,QAAQ;AAO9D,MAAM,UAAU,MAAM;AAOtB,MAAM,WAAW,CAAC,QAAa,OAAO,QAAQ;AAQ9C,MAAM,WAAW,CAAC,QAAa,OAAO,QAAQ;AAO9C,MAAM,WAAW,CAAC,QAAa,OAAO,QAAQ;AAO9C,MAAM,YAAY,CAAC,QAAa,OAAO,QAAQ;AAO/C,MAAM,WAAW,CAAC,QAAa,aAAa,GAAG,MAAM;AAM/C,MAAA,SAAS,CAAC,QAAa,eAAe;AAO5C,MAAM,QAAQ,CAAC,QAAa,aAAa,GAAG,MAAM;AAMlD,MAAM,QAAQ,CAAC,QAAa,aAAa,GAAG,MAAM;AAMlD,MAAM,YAAY,CAAC,QAAa,aAAa,GAAG,MAAM;AAMtD,MAAM,WAAW,CAAC,QAAa,OAAO,QAAQ;AAOxC,MAAA,oBAAoB,CAAC,QAAa;AACpC,MAAI,QAAQ;AAAa,WAAA;AACzB,SAAO,OAAO,QAAQ;AAC1B;;"}